// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                String    @id @default(cuid())
  clerkId           String    @unique
  email             String    @unique
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  stripeCustomerId  String?
  subscriptionStatus String?
  subscriptionId    String?
  role              String    @default("user")
  metadata          String    @default("{}")
  contracts         Contract[]
  referrals         Referral[]
  contractComparisons ContractComparison[]
}

model SystemSettings {
  id              String   @id @default("1")
  maxFileSize     Int      @default(10)
  allowedFileTypes String  @default(".pdf,.doc,.docx")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Contract {
  id                String    @id @default(cuid())
  userId            String
  title             String
  originalText      String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  riskLevel         String?
  contractType      String    @default("ANALYZED")
  metadata          String    @default("{}")
  recommendedActions String    @default("[]")
  complianceFlags   String    @default("[]")
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  issues            Issue[]
  comparisons       ContractComparison[] @relation("OriginalContract")
  revisedComparisons ContractComparison[] @relation("RevisedContract")
}

model Issue {
  id                String    @id @default(cuid())
  contractId        String
  type              String
  text              String
  explanation       String
  suggestion        String
  severityScore     Int       @default(5)
  industryRelevance String    @default("[]")
  createdAt         DateTime  @default(now())
  metadata          String    @default("{}")
  severity          String    @default("MEDIUM")
  contract          Contract  @relation(fields: [contractId], references: [id], onDelete: Cascade)
}

model Referral {
  id              String    @id @default(cuid())
  userId          String
  email           String
  status          String
  referredUserId  String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ContractComparison {
  id                String    @id @default(cuid())
  userId            String
  originalContractId String
  revisedContractId String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  originalContract  Contract  @relation("OriginalContract", fields: [originalContractId], references: [id], onDelete: Cascade)
  revisedContract   Contract  @relation("RevisedContract", fields: [revisedContractId], references: [id], onDelete: Cascade)
}

